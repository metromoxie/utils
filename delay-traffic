#!/bin/sh
#
#    Copyright 2011 Joel Weinberger
#
#    This program is free software: you can redistribute it and/or modify it
#    under the terms of the GNU General Public License as published by the Free
#    Software Foundation, either version 3 of the License, or (at your option)
#    any later version.
#
#    This program is distributed in the hope that it will be useful, but WITHOUT
#    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
#    more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This script adds a delay to all network traffic over a particular network
# interface. This may be useful in various types of experiments where you want
# to test performance with network latency, but want to normalize all network
# traffic. This makes the most sense used locally otherwise general network
# latency will add to the artificial latency.
#
# This requires the network traffic control program "tc". On Arch Linux, "tc" is
# available in the "iproute2" package.
#
# Note that for the commands "add" and "del", delay-traffic requires root
# permissions and will request them if necessary.

set -e

USAGE="delay-traffic [-l latency] [-d device] <add|del|show>"

# The default latency to add (in milliseconds) and the default device.
LATENCY=100
DEVICE="eth0"

while getopts ":hl:d:" opt; do
	case $opt in
		h)
			echo "usage: $USAGE"
			echo ""
			echo "delay-traffic adds a delay to all network traffic over a "
			echo "particular network device. If no latency option is specified, "
			echo "defaults to 100ms. If no device is specified, defaults to "
			echo "eth0."
			echo ""
			echo "Note that the \"add\" and \"del\" commands require root "
			echo "privileges and will request them if necessary."
			echo ""
			echo "-h                shows this help message"
			echo "-l <latency>      specifies a latency to add (in ms)"
			echo "-d <device>       specifies a device to add the delay to"
			exit 0
			;;
		l)
			LATENCY=$OPTARG
			;;
		d)
			DEVICE=$OPTARG
			;;
		:)
			echo "option -$OPTARG requires an argument" >&2
			echo "usage: $USAGE" >&2
			exit 1
			;;
		\?)
			echo "unknown option: -$OPTARG" >&2
			echo "usage: $USAGE" >&2
			exit 1
			;;
	esac
done

# Shift the arguments past all of the options
shift $(($OPTIND - 1))

# Make sure that there are the correct number of non-option arguments.
if [[ $# != 1 ]]; then
	echo "You must provide exactly one command: <add|del|show>" >&2
	echo "" >&2
	echo "usage: $USAGE" >&2
	exit 1
fi

case $1 in
"add")
	sudo tc qdisc add dev $DEVICE root handle 1:0 netem delay ${LATENCY}msec
	;;
"del")
	sudo tc qdisc del dev $DEVICE root
	;;
"show")
	tc qdisc show dev $DEVICE
	;;
*)
	echo "Unknown command \"$1\"" >&2
	echo "" >&2
	echo "usage: $USAGE" >&2
	;;
esac
